name: Build Motion Detector

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-native:
    name: Build Native (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Build universal version
      run: make
    
    - name: Test help output (ignore exit code)
      run: ./motion-detector --help || true
    
    - name: Build Pi Zero debug version
      run: make pi-debug
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: motion-detector-${{ matrix.os }}
        path: |
          motion-detector
          motion-detector-pi-debug

  cross-compile-pi-zero:
    name: Cross-compile Pi Zero
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Pi Zero cross-compiler and multiarch
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
        sudo apt-get install -y libc6-dev-armhf-cross
    
    - name: Build for Pi Zero (using hard-float for compatibility)
      run: |
        echo "Building for Pi Zero (ARMv6 hard-float for compatibility)"
        
        # Use hard-float instead of soft-float to avoid library issues
        # Pi Zero can handle hard-float even though it's ARMv6
        CFLAGS="-march=armv6 -mfpu=vfp -mfloat-abi=hard -O2 -std=c++11"
        
        # Build main version
        make clean
        make CXX="arm-linux-gnueabihf-g++" CXXFLAGS="$CFLAGS"
        mv motion-detector motion-detector-pi-zero
        
        # Build debug version
        make clean  
        make pi-debug CXX="arm-linux-gnueabihf-g++" CXXFLAGS="-Os -g -fno-strict-aliasing -fstack-protector-strong -std=c++11"
        mv motion-detector-pi-debug motion-detector-pi-debug-pi-zero
        
        # Check files
        file motion-detector-pi-zero
        file motion-detector-pi-debug-pi-zero
        
    - name: Upload Pi Zero artifacts
      uses: actions/upload-artifact@v4
      with:
        name: motion-detector-pi-zero
        path: |
          motion-detector-pi-zero
          motion-detector-pi-debug-pi-zero

  cross-compile-pi3-4:
    name: Cross-compile Pi 3/4
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install ARM cross-compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
        sudo apt-get install -y libc6-dev-armhf-cross
    
    - name: Build for Pi 3/4
      run: |
        echo "Building for Pi 3/4 (ARMv7 hard-float)"
        
        # Build main version
        make clean
        make CXX="arm-linux-gnueabihf-g++" CXXFLAGS="-march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=hard -O2 -std=c++11"
        mv motion-detector motion-detector-pi3-4
        
        # Build debug version
        make clean  
        make pi-debug CXX="arm-linux-gnueabihf-g++" CXXFLAGS="-Os -g -fno-strict-aliasing -fstack-protector-strong -std=c++11"
        mv motion-detector-pi-debug motion-detector-pi-debug-pi3-4
        
        # Check files
        file motion-detector-pi3-4
        file motion-detector-pi-debug-pi3-4
        
    - name: Upload Pi 3/4 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: motion-detector-pi3-4
        path: |
          motion-detector-pi3-4
          motion-detector-pi-debug-pi3-4

  cross-compile-arm64:
    name: Cross-compile ARM64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install ARM64 cross-compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        sudo apt-get install -y libc6-dev-arm64-cross
    
    - name: Build for ARM64
      run: |
        echo "Building for ARM64 (AArch64)"
        
        # Build main version
        make clean
        make CXX="aarch64-linux-gnu-g++" CXXFLAGS="-march=armv8-a -O2 -std=c++11"
        mv motion-detector motion-detector-arm64
        
        # Build debug version
        make clean  
        make pi-debug CXX="aarch64-linux-gnu-g++" CXXFLAGS="-Os -g -fno-strict-aliasing -fstack-protector-strong -std=c++11"
        mv motion-detector-pi-debug motion-detector-pi-debug-arm64
        
        # Check files
        file motion-detector-arm64
        file motion-detector-pi-debug-arm64
        
    - name: Upload ARM64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: motion-detector-arm64
        path: |
          motion-detector-arm64
          motion-detector-pi-debug-arm64

 